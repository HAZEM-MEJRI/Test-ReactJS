{"ast":null,"code":"var _jsxFileName = \"/home/hazem/Documents/front-end-assessment-v1-test/src/components/Products/Update/UpdateFormContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getProductById } from '../../../reducers/products';\nimport ProductForm from './ProductForm';\nimport { Link } from 'react-router-dom';\nimport { updateProductForm } from '../../../actions/products';\n\nclass UpdateFormContainer extends Component {\n  render() {\n    const _this$props = this.props,\n          product = _this$props.product,\n          categories = _this$props.categories,\n          dispatch = _this$props.dispatch;\n\n    if (!product) {\n      return null;\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Home\"), React.createElement(ProductForm, {\n      onSave: data => dispatch(updateProductForm(product.id, data)),\n      product: product,\n      categories: categories,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }));\n  }\n\n}\n\nUpdateFormContainer.propTypes = {\n  product: PropTypes.object,\n  categories: PropTypes.array,\n  history: PropTypes.object\n};\n\nconst mapStateToProps = (state, {\n  productId\n}) => {\n  return {\n    product: getProductById(state, productId),\n    categories: state.categories\n  };\n};\n\nexport default connect(mapStateToProps)(UpdateFormContainer);","map":{"version":3,"sources":["/home/hazem/Documents/front-end-assessment-v1-test/src/components/Products/Update/UpdateFormContainer.js"],"names":["React","Component","connect","PropTypes","getProductById","ProductForm","Link","updateProductForm","UpdateFormContainer","render","props","product","categories","dispatch","data","id","propTypes","object","array","history","mapStateToProps","state","productId"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,cAAR,QAA6B,4BAA7B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,iBAAR,QAAgC,2BAAhC;;AAEA,MAAMC,mBAAN,SAAkCP,SAAlC,CAA4C;AACxCQ,EAAAA,MAAM,GAAG;AAAA,wBACmC,KAAKC,KADxC;AAAA,UACEC,OADF,eACEA,OADF;AAAA,UACWC,UADX,eACWA,UADX;AAAA,UACuBC,QADvB,eACuBA,QADvB;;AAGL,QAAI,CAACF,OAAL,EAAc;AACV,aAAO,IAAP;AACH;;AAED,WACI,0CACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,oBAAC,WAAD;AACI,MAAA,MAAM,EAAGG,IAAD,IAAUD,QAAQ,CAACN,iBAAiB,CAACI,OAAO,CAACI,EAAT,EAAYD,IAAZ,CAAlB,CAD9B;AAEI,MAAA,OAAO,EAAEH,OAFb;AAGI,MAAA,UAAU,EAAEC,UAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAUH;;AAlBuC;;AAqB5CJ,mBAAmB,CAACQ,SAApB,GAAgC;AAC5BL,EAAAA,OAAO,EAAER,SAAS,CAACc,MADS;AAE5BL,EAAAA,UAAU,EAAET,SAAS,CAACe,KAFM;AAG5BC,EAAAA,OAAO,EAAEhB,SAAS,CAACc;AAHS,CAAhC;;AAMA,MAAMG,eAAe,GAAG,CAACC,KAAD,EAAQ;AAACC,EAAAA;AAAD,CAAR,KAAwB;AAC5C,SAAO;AACHX,IAAAA,OAAO,EAAEP,cAAc,CAACiB,KAAD,EAAQC,SAAR,CADpB;AAEHV,IAAAA,UAAU,EAAES,KAAK,CAACT;AAFf,GAAP;AAIH,CALD;;AAOA,eAAeV,OAAO,CAACkB,eAAD,CAAP,CAAyBZ,mBAAzB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {getProductById} from '../../../reducers/products';\nimport ProductForm from './ProductForm';\nimport {Link} from 'react-router-dom';\nimport {updateProductForm} from '../../../actions/products';\n\nclass UpdateFormContainer extends Component {\n    render() {\n        const {product, categories, dispatch} = this.props;\n\n        if (!product) {\n            return null;\n        }\n\n        return (\n            <>\n                <Link to='/'>Home</Link>\n                <ProductForm\n                    onSave={(data) => dispatch(updateProductForm(product.id,data))}\n                    product={product}\n                    categories={categories}\n                />\n            </>\n        );\n    }\n}\n\nUpdateFormContainer.propTypes = {\n    product: PropTypes.object,\n    categories: PropTypes.array,\n    history: PropTypes.object,\n};\n\nconst mapStateToProps = (state, {productId}) => {\n    return {\n        product: getProductById(state, productId),\n        categories: state.categories,\n    }\n};\n\nexport default connect(mapStateToProps)(UpdateFormContainer);\n"]},"metadata":{},"sourceType":"module"}