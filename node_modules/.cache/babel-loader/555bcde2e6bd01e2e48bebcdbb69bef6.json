{"ast":null,"code":"import _slicedToArray from \"/home/hazem/Documents/front-end-assessment-v1-test/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hazem/Documents/front-end-assessment-v1-test/src/components/Products/Update/ProductForm.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, Button, Form, FormFeedback, FormGroup, Input, Label } from 'reactstrap';\nimport { getMultiSelected, repeat } from '../../../utils';\nimport { isCategoriesValid, isExpiredDateValid, isNameValid, isRatingValid } from './validators';\n\nconst ProductForm = props => {\n  const _props$product = props.product,\n        product = _props$product === void 0 ? {} : _props$product;\n\n  const _useState = useState(product.name || ''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(product.brand || ''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        brand = _useState4[0],\n        setBrand = _useState4[1];\n\n  const _useState5 = useState(product.rating || 0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        rating = _useState6[0],\n        setRating = _useState6[1];\n\n  const _useState7 = useState(product.categories || []),\n        _useState8 = _slicedToArray(_useState7, 2),\n        categories = _useState8[0],\n        setCategories = _useState8[1];\n\n  const _useState9 = useState(product.itemsInStock || 0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        itemsInStock = _useState10[0],\n        setItemsInStock = _useState10[1];\n\n  const _useState11 = useState(product.receiptDate || ''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        receiptDate = _useState12[0],\n        setReceiptDate = _useState12[1];\n\n  const _useState13 = useState(product.expirationDate || ''),\n        _useState14 = _slicedToArray(_useState13, 2),\n        expirationDate = _useState14[0],\n        setExpirationDate = _useState14[1];\n\n  const _useState15 = useState(product.featured || false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        featured = _useState16[0],\n        setFeatured = _useState16[1];\n\n  const _useState17 = useState(false),\n        _useState18 = _slicedToArray(_useState17, 2),\n        alertSuccess = _useState18[0],\n        setAlertSuccess = _useState18[1];\n\n  const _useState19 = useState(false),\n        _useState20 = _slicedToArray(_useState19, 2),\n        alertError = _useState20[0],\n        setAlertError = _useState20[1];\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (isNameValid(name) && isCategoriesValid(categories) && isExpiredDateValid(expirationDate) && (isRatingValid(rating) && featured || !(isRatingValid(rating) || featured))) {\n      props.onSave({\n        name,\n        brand,\n        rating,\n        categories,\n        itemsInStock,\n        receiptDate,\n        expirationDate,\n        featured\n      });\n      setName('');\n      setBrand('');\n      setRating(0);\n      setCategories([]);\n      setItemsInStock(0);\n      setReceiptDate('');\n      setExpirationDate('');\n      setFeatured(false);\n      setAlertSuccess(true);\n      setTimeout(function () {\n        setAlertSuccess(false);\n      }, 1000);\n    } else {\n      setAlertError(true);\n      setTimeout(function () {\n        setAlertError(false);\n      }, 1500);\n    }\n  };\n\n  return React.createElement(Form, {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Input, {\n    invalid: !isNameValid(name),\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    placeholder: \"Name\",\n    value: name,\n    onChange: ({\n      target\n    }) => setName(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(FormFeedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Name is required, the length must not be greater than 200\")), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"brand\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Brand\"), React.createElement(Input, {\n    type: \"text\",\n    name: \"brand\",\n    id: \"brand\",\n    placeholder: \"Brand\",\n    value: brand,\n    onChange: ({\n      target\n    }) => setBrand(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"rating\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Rating\"), React.createElement(Input, {\n    type: \"select\",\n    name: \"rating\",\n    id: \"rating\",\n    value: rating,\n    onChange: ({\n      target\n    }) => setRating(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, repeat(11).map(v => React.createElement(\"option\", {\n    key: v,\n    value: v,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, v)))), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"categories\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Categories\"), React.createElement(Input, {\n    invalid: !isCategoriesValid(categories),\n    type: \"select\",\n    name: \"categories\",\n    id: \"categories\",\n    multiple: true,\n    value: categories,\n    onChange: ({\n      target\n    }) => setCategories(getMultiSelected(target)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, props.categories.map(({\n    id,\n    name\n  }) => React.createElement(\"option\", {\n    key: id,\n    value: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, name))), React.createElement(FormFeedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"A product must have from 1 to 5 categories\")), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"itemsInStock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Items In Stock\"), React.createElement(Input, {\n    type: \"number\",\n    name: \"itemsInStock\",\n    id: \"itemsInStock\",\n    value: itemsInStock,\n    onChange: ({\n      target\n    }) => setItemsInStock(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"expirationDate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Expiration date\"), React.createElement(Input, {\n    type: \"date\",\n    name: \"expirationDate\",\n    id: \"expirationDate\",\n    value: expirationDate,\n    onChange: ({\n      target\n    }) => setExpirationDate(target.value),\n    invalid: !isExpiredDateValid(expirationDate),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(FormFeedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"If a product has an expiration date it must expire not less than 30 days since now\")), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"receiptDate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Receipt date\"), React.createElement(Input, {\n    type: \"date\",\n    name: \"receiptDate\",\n    id: \"receiptDate\",\n    value: receiptDate,\n    onChange: ({\n      target\n    }) => setReceiptDate(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    check: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Input, {\n    id: \"unique-id\",\n    type: \"checkbox\",\n    invalid: !(isRatingValid(rating) && featured || !(isRatingValid(rating) || featured)),\n    checked: featured,\n    onChange: ({\n      target\n    }) => setFeatured(target.checked),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), React.createElement(Label, {\n    for: \"unique-id\",\n    check: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \" Featured \"), React.createElement(FormFeedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Cocher la case Featured , si le rating est sup\\xE9rieure \\xE0 8, sinon la d\\xE9cocher.\")), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(\"div\", {\n    style: {\n      width: \"40%\",\n      textAlign: \"center\",\n      margin: \"auto\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    color: \"danger\",\n    isOpen: alertError,\n    toggle: () => setAlertError(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"Please correct all errors and try again\"), React.createElement(Alert, {\n    color: \"success\",\n    isOpen: alertSuccess,\n    toggle: () => setAlertSuccess(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Success !\")));\n};\n\nProductForm.propTypes = {\n  product: PropTypes.object,\n  categories: PropTypes.array.isRequired,\n  onSave: PropTypes.func.isRequired\n};\nexport default ProductForm;","map":{"version":3,"sources":["/home/hazem/Documents/front-end-assessment-v1-test/src/components/Products/Update/ProductForm.js"],"names":["React","useState","PropTypes","Alert","Button","Form","FormFeedback","FormGroup","Input","Label","getMultiSelected","repeat","isCategoriesValid","isExpiredDateValid","isNameValid","isRatingValid","ProductForm","props","product","name","setName","brand","setBrand","rating","setRating","categories","setCategories","itemsInStock","setItemsInStock","receiptDate","setReceiptDate","expirationDate","setExpirationDate","featured","setFeatured","alertSuccess","setAlertSuccess","alertError","setAlertError","onSubmit","e","preventDefault","onSave","setTimeout","target","value","map","v","id","checked","width","textAlign","margin","propTypes","object","array","isRequired","func"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {Alert, Button, Form, FormFeedback, FormGroup, Input, Label} from 'reactstrap';\nimport {getMultiSelected, repeat} from '../../../utils';\nimport {isCategoriesValid, isExpiredDateValid, isNameValid, isRatingValid} from './validators';\n\nconst ProductForm = (props) => {\n    const {product = {}} = props;\n    const [name, setName] = useState(product.name || '');\n    const [brand, setBrand] = useState(product.brand || '');\n    const [rating, setRating] = useState(product.rating || 0);\n    const [categories, setCategories] = useState(product.categories || []);\n    const [itemsInStock, setItemsInStock] = useState(product.itemsInStock || 0);\n    const [receiptDate, setReceiptDate] = useState(product.receiptDate || '');\n    const [expirationDate, setExpirationDate] = useState(product.expirationDate || '');\n    const [featured, setFeatured] = useState(product.featured || false);\n    const [alertSuccess, setAlertSuccess] = useState( false);\n    const [alertError, setAlertError] = useState( false);\n    const onSubmit = (e) => {\n\n        e.preventDefault();\n        if (isNameValid(name) &&\n            isCategoriesValid(categories) &&\n            isExpiredDateValid(expirationDate) &&\n            ((isRatingValid(rating) && featured) || !(isRatingValid(rating) || featured))\n            ) {\n            props.onSave({\n                name,\n                brand,\n                rating,\n                categories,\n                itemsInStock,\n                receiptDate,\n                expirationDate,\n                featured,\n            });\n            setName('') ; setBrand('') ; setRating(0) ; setCategories([])\n            setItemsInStock(0) ; setReceiptDate('') ; setExpirationDate('') ; setFeatured(false)\n            setAlertSuccess(true);\n             setTimeout( function (){\n                setAlertSuccess(false)\n            },1000  );\n        } else {\n          setAlertError(true)\n         setTimeout(function (){\n                setAlertError(false)\n            },1500)\n        }\n    }\n\n    return (\n        <Form onSubmit={onSubmit}>\n            <FormGroup>\n                <Label for='name'>Name</Label>\n                <Input\n                    invalid={!isNameValid(name)}\n                    type='text'\n                    name='name'\n                    id='name'\n                    placeholder='Name'\n                    value={name}\n                    onChange={({target}) => setName(target.value)}\n                />\n                <FormFeedback>Name is required, the length must not be greater than 200</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n                <Label for='brand'>Brand</Label>\n                <Input\n                    type='text'\n                    name='brand'\n                    id='brand'\n                    placeholder='Brand'\n                    value={brand}\n                    onChange={({target}) => setBrand(target.value)}\n                />\n            </FormGroup>\n            <FormGroup>\n                <Label for=\"rating\">Rating</Label>\n                <Input\n                    type=\"select\"\n                    name=\"rating\"\n                    id=\"rating\"\n                    value={rating}\n                    onChange={({target}) => setRating(target.value)}\n                >\n                    {repeat(11).map((v) => (\n                        <option key={v} value={v}>{v}</option>\n                    ))}\n\n                </Input>\n            </FormGroup>\n            <FormGroup>\n                <Label for=\"categories\">Categories</Label>\n                <Input\n                    invalid={!isCategoriesValid(categories)}\n                    type=\"select\"\n                    name=\"categories\"\n                    id=\"categories\"\n                    multiple\n                    value={categories}\n                    onChange={({target}) => setCategories(getMultiSelected(target))}\n                >\n                    {props.categories.map(({id, name}) => (\n                        <option key={id} value={id}>{name}</option>\n                    ))}\n                </Input>\n                <FormFeedback>A product must have from 1 to 5 categories</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n                <Label for=\"itemsInStock\">Items In Stock</Label>\n                <Input type=\"number\" name=\"itemsInStock\" id=\"itemsInStock\" value={itemsInStock}\n                       onChange={({target}) => setItemsInStock(target.value)}\n                />\n            </FormGroup>\n            <FormGroup>\n                <Label for=\"expirationDate\">Expiration date</Label>\n                <Input\n                    type=\"date\"\n                    name=\"expirationDate\"\n                    id=\"expirationDate\"\n                    value={expirationDate}\n                    onChange={({target}) => setExpirationDate(target.value)}\n                    invalid={!isExpiredDateValid(expirationDate)}\n\n                />\n                <FormFeedback>If a product has an expiration date it must expire not less than 30 days since\n                    now</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n                <Label for=\"receiptDate\">Receipt date</Label>\n                <Input type=\"date\" name=\"receiptDate\" id=\"receiptDate\" value={receiptDate}\n                       onChange={({target}) => setReceiptDate(target.value)}\n                />\n            </FormGroup>\n            <FormGroup check>\n                <Input id=\"unique-id\"\n                       type=\"checkbox\"\n                       invalid={!((isRatingValid(rating) && featured) || !(isRatingValid(rating) || featured))}\n                       checked={featured}\n                       onChange={({target}) => setFeatured(target.checked)}/>\n                <Label for=\"unique-id\" check> Featured </Label>\n                <FormFeedback>Cocher la case Featured , si le rating est supérieure à 8, sinon la\n                    décocher.</FormFeedback>\n            </FormGroup>\n            <Button>Submit</Button>\n            <div style={{width : \"40%\" , textAlign: \"center\" ,margin :\"auto\" }}>\n                <Alert  color=\"danger\" isOpen={alertError} toggle={()=>setAlertError(false)}>\n                    Please correct all errors and try again\n                </Alert>\n                <Alert  color=\"success\" isOpen={alertSuccess} toggle={()=>setAlertSuccess(false)}>\n                    Success !\n                </Alert>\n            </div>\n\n        </Form>\n    );\n}\n\nProductForm.propTypes = {\n    product: PropTypes.object,\n    categories: PropTypes.array.isRequired,\n    onSave: PropTypes.func.isRequired,\n};\n\nexport default ProductForm;\n"]},"metadata":{},"sourceType":"module"}