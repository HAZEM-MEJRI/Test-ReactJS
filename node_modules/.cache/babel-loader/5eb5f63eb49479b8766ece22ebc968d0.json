{"ast":null,"code":"import _objectSpread from \"/home/hazem/Documents/front-end-assessment-v1-test/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/hazem/Documents/front-end-assessment-v1-test/src/components/Products/ProductsContainer.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../Header/Header';\nimport ProductsList from './ProductsList';\nimport { deleteProduct } from '../../actions/products';\nimport { getCategoriesById } from '../../reducers/categories';\n\nclass ProductsContainer extends Component {\n  render() {\n    const _this$props = this.props,\n          products = _this$props.products,\n          dispatch = _this$props.dispatch;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(Header, {\n      name: \"Products\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }), React.createElement(ProductsList, {\n      products: products,\n      onDelete: id => dispatch(deleteProduct(id)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }));\n  }\n\n}\n\nProductsContainer.propTypes = {\n  products: PropTypes.array.isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  const categoriesById = getCategoriesById(state);\n  const products = state.products.map(product => {\n    const categories = product.categories.map(id => categoriesById[id]);\n    return _objectSpread({}, product, {\n      categories\n    });\n  });\n  return {\n    products\n  };\n};\n\nexport default connect(mapStateToProps)(ProductsContainer);","map":{"version":3,"sources":["/home/hazem/Documents/front-end-assessment-v1-test/src/components/Products/ProductsContainer.js"],"names":["React","Component","Fragment","connect","PropTypes","Header","ProductsList","deleteProduct","getCategoriesById","ProductsContainer","render","props","products","dispatch","id","propTypes","array","isRequired","func","mapStateToProps","state","categoriesById","map","product","categories"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,aAAR,QAA4B,wBAA5B;AACA,SAAQC,iBAAR,QAAgC,2BAAhC;;AAEA,MAAMC,iBAAN,SAAgCR,SAAhC,CAA0C;AAExCS,EAAAA,MAAM,GAAG;AAAA,wBACwB,KAAKC,KAD7B;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,QADX,eACWA,QADX;AAEP,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,YAAD;AAAc,MAAA,QAAQ,EAAED,QAAxB;AAAkC,MAAA,QAAQ,EAAGE,EAAD,IAAQD,QAAQ,CAACN,aAAa,CAACO,EAAD,CAAd,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAVuC;;AAa1CL,iBAAiB,CAACM,SAAlB,GAA8B;AAC5BH,EAAAA,QAAQ,EAAER,SAAS,CAACY,KAAV,CAAgBC,UADE;AAE5BJ,EAAAA,QAAQ,EAAET,SAAS,CAACc,IAAV,CAAeD;AAFG,CAA9B;;AAKA,MAAME,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAMC,cAAc,GAAGb,iBAAiB,CAACY,KAAD,CAAxC;AAEA,QAAMR,QAAQ,GAAGQ,KAAK,CAACR,QAAN,CAAeU,GAAf,CAAmBC,OAAO,IAAI;AAC7C,UAAMC,UAAU,GAAID,OAAO,CAACC,UAAR,CAAmBF,GAAnB,CAAuBR,EAAE,IAAIO,cAAc,CAACP,EAAD,CAA3C,CAApB;AAEA,6BACKS,OADL;AAEEC,MAAAA;AAFF;AAID,GAPgB,CAAjB;AASA,SAAO;AACLZ,IAAAA;AADK,GAAP;AAGD,CAfD;;AAiBA,eAAeT,OAAO,CAACgB,eAAD,CAAP,CAAyBV,iBAAzB,CAAf","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../Header/Header';\nimport ProductsList from './ProductsList';\nimport {deleteProduct} from '../../actions/products';\nimport {getCategoriesById} from '../../reducers/categories';\n\nclass ProductsContainer extends Component {\n\n  render() {\n    const { products, dispatch } = this.props;\n    return (\n      <Fragment>\n        <Header name=\"Products\"/>\n        <ProductsList products={products} onDelete={(id) => dispatch(deleteProduct(id))} />\n      </Fragment>\n    );\n  }\n}\n\nProductsContainer.propTypes = {\n  products: PropTypes.array.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const categoriesById = getCategoriesById(state);\n\n  const products = state.products.map(product => {\n    const categories =  product.categories.map(id => categoriesById[id])\n\n    return {\n      ...product,\n      categories\n    };\n  });\n\n  return {\n    products,\n  }\n};\n\nexport default connect(mapStateToProps)(ProductsContainer);\n"]},"metadata":{},"sourceType":"module"}